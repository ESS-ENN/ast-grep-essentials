id: hardcoded-password-rust
language: rust
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. It is
  recommended to rotate the secret and retrieve them from a secure secret
  vault or Hardware Security Module (HSM), alternatively environment
  variables can be used if allowed by your company policy.
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
      - https://docs.rs/sqlx/latest/sqlx/
      - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
utils:
  match_call_expression_MySqlConnectOptions:
    kind: call_expression
    all:
      - has:
          stopBy: end
          kind: field_expression
          has:
            kind: call_expression
            all:
              - has:
                  kind: scoped_identifier
                  all:
                    - has:
                        kind: identifier
                        field: path
                        regex: "^MySqlConnectOptions$"
                    - has:
                        kind: identifier
                        field: name
                        regex: "^new$"
              - has:
                  kind: arguments
      - has:
          kind: arguments
          has:
            kind: string_literal
            has:
              kind: string_content

    inside:
      kind: field_expression
      has:
        kind: field_identifier
      inside:
        kind: call_expression
        has:
          kind: arguments
        inside:
          kind: field_expression
          has:
            kind: field_identifier
          inside:
            kind: call_expression
            has:
              kind: arguments
            inside:
              kind: await_expression
              inside:
                kind: try_expression
                inside:
                  kind: let_declaration
                  inside:
                    stopBy: end
                    kind: function_item
                    follows:
                      stopBy: end
                      kind: use_declaration
                      has:
                        kind: scoped_use_list
                        field: argument
                        all:
                          - has:
                              kind: scoped_identifier
                              field: path
                              all:
                                - has:
                                    kind: identifier
                                    field: path
                                    regex: "^sqlx$"
                                - has:
                                    kind: identifier
                                    field: name
                                    regex: "^mysql$"
                          - has:
                              kind: use_list
                              field: list
                              all:
                                - has:
                                    kind: identifier
                                    regex: "^MySqlConnectOptions$"
                                - has:
                                    kind: identifier
                                    regex: "^MySqlConnection$"
                                - has:
                                    kind: identifier
                                    regex: "^MySqlPool$"
                                - has:
                                    kind: identifier
                                    regex: "^MySqlSslMode$"
  match_call_expression_PgConnectOptions:
    kind: call_expression
    all:
      - has:
          kind: field_expression
          has:
            stopBy: end
            kind: call_expression
            all:
              - has:
                  stopBy: end
                  kind: scoped_identifier
                  all:
                    - has:
                        stopBy: end
                        kind: identifier
                        field: path
                        regex: "^PgConnectOptions$"
                    - has:
                        stopBy: end
                        field: name
                        kind: identifier
                        regex: "^new$"
              - has:
                  kind: arguments
      - has:
          kind: arguments
          has:
            stopBy: end
            kind: string_literal
            has:
              stopBy: end
              kind: string_content
    inside:
      kind: field_expression
      has:
        kind: field_identifier
      inside:
        kind: call_expression
        has:
          kind: arguments
        inside:
          kind: field_expression
          has:
            kind: field_identifier
          inside:
            kind: call_expression
            has:
              kind: arguments
            inside:
              kind: await_expression
              inside:
                kind: try_expression
                inside:
                  kind: let_declaration
                  inside:
                    stopBy: end
                    kind: function_item
                    follows:
                      stopBy: end
                      kind: use_declaration
                      has:
                        kind: scoped_use_list
                        field: argument
                        all:
                          - has:
                              kind: scoped_identifier
                              field: path
                              all:
                                - has:
                                    kind: identifier
                                    field: path
                                    regex: "^sqlx$"
                                - has:
                                    kind: identifier
                                    field: name
                                    regex: "^postgres$"
                          - has:
                              kind: use_list
                              field: list
                              all:
                                - has:
                                    kind: identifier
                                    regex: "^PgConnectOptions$"
                                - has:
                                    kind: identifier
                                    regex: "^PgConnection$"
                                - has:
                                    kind: identifier
                                    regex: "^PgPool$"
                                - has:
                                    kind: identifier
                                    regex: "^PgSslMode$"
  match_call_expression_PgConnectOptions_above_instance:
    kind: call_expression
    all:
      - has:
          kind: field_expression
          all:
            - has:
                kind: call_expression
                has:
                  kind: field_expression
                  all:
                    - has:
                        stopBy: end
                        kind: identifier
                        field: value
                        pattern: $PG
                    - has:
                        kind: field_identifier
            - has:
                kind: field_identifier
      - has:
          kind: arguments
          has:
            stopBy: end
            kind: string_literal
            has:
              stopBy: end
              kind: string_content
    inside:
      kind: field_expression
      inside:
        kind: call_expression
        has:
          kind: arguments
        inside:
          kind: field_expression
          has:
            kind: field_identifier
          inside:
            kind: call_expression
            has:
              kind: arguments
            inside:
              kind: await_expression
              inside:
                kind: try_expression
                inside:
                  kind: let_declaration
                  follows:
                    stopBy: end
                    kind: let_declaration
                    all:
                      - has:
                          kind: identifier
                          pattern: $PG
                      - has:
                          kind: call_expression
                          all:
                            - has:
                                kind: scoped_identifier
                                all:
                                  - has:
                                      kind: identifier
                                      field: path
                                      regex: "^PgConnectOptions$"
                                  - has:
                                      kind: identifier
                                      field: name
                                      regex: "^new$"
                            - has:
                                kind: arguments
                    inside:
                      stopBy: end
                      kind: function_item
                      follows:
                        stopBy: end
                        kind: use_declaration
                        has:
                          kind: scoped_use_list
                          all:
                            - has:
                                kind: scoped_identifier
                                field: path
                                all:
                                  - has:
                                      kind: identifier
                                      field: path
                                      regex: "^sqlx$"
                                  - has:
                                      kind: identifier
                                      field: name
                                      regex: "^postgres$"
                            - has:
                                kind: use_list
                                field: list
                                all:
                                  - has:
                                      kind: identifier
                                      regex: "^PgConnectOptions$"
                                  - has:
                                      kind: identifier
                                      regex: "^PgConnection$"
                                  - has:
                                      kind: identifier
                                      regex: "^PgPool$"
                                  - has:
                                      kind: identifier
                                      regex: "^PgSslMode$"
rule:
  any:
    - matches: match_call_expression_MySqlConnectOptions
    - matches: match_call_expression_PgConnectOptions
    - matches: match_call_expression_PgConnectOptions_above_instance

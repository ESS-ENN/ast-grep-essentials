id: ruby-mongo-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  match_call:
    kind: call
    all:
      - has:
          kind: scope_resolution
          field: receiver
      - has:
          kind: identifier
          field: method
          regex: "^new$"
      - has:
          kind: argument_list
          all:
            - has:
                stopBy: end
                kind: array
            - has:
                stopBy: end
                kind: pair
            - has:
                stopBy: end
                kind: pair
                all:
                  - has:
                      stopBy: end
                      kind: hash_key_symbol
                      field: key
                      regex: "^password$"
                      not:
                        precedes:
                          stopBy: end
                          kind: element_reference
                  - has:
                      stopBy: end
                      kind: string
                      field: value
            - has:
                stopBy: end
                kind: pair
  match_calls:
    kind: call
    all:
      - has:
          stopBy: end
          kind: identifier
      - has:
          stopBy: end
          kind: identifier
          regex: "^with$"
          field: method
      - has:
          stopBy: end
          kind: argument_list
          all:
            - has:
                stopBy: end
                kind: pair
            - has:
                stopBy: end
                kind: pair
                all:
                  - has:
                      kind: hash_key_symbol
                      field: key
                      regex: "^password$"
                  - has:
                      kind: string
                      field: value
rule:
  any:
    - matches: match_call
    - matches: match_calls

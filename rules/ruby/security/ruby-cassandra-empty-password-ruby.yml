id: ruby-cassandra-empty-password-ruby
language: ruby
severity: warning
message: >-
  The application creates a database connection with an empty password.
  This can lead to unauthorized access by either an internal or external
  malicious actor. To prevent this vulnerability, enforce authentication
  when connecting to a database by using environment variables to securely
  provide credentials or retrieving them from a secure vault or HSM
  (Hardware Security Module).
note: >-
  [CWE-287] Improper Authentication.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  Cassandra.cluster():
    # Cassandra.cluster(..., password: "", ...)
   kind: call
   all:
     - has:
         stopBy: neighbor
         kind: constant
         regex: ^Cassandra$
     - has:
         stopBy: neighbor
         regex: ^.$
     - has:
         stopBy: neighbor
         kind: identifier
         regex: ^cluster$
     - has:
         stopBy: neighbor
         kind: argument_list
         has:
           stopBy: end
           kind: pair
           all:
            - has:
                stopBy: neighbor
                kind: hash_key_symbol
                regex: ^password$
            - has:
                stopBy: neighbor
                kind: string
                not:
                 has:
                  stopBy: neighbor
                  kind: string_content
     - inside:
           stopBy: end
           kind: program
           has:
               stopBy: end
               kind: call
               pattern: require 'cassandra'
  Cassandra.cluster()_with_instance:
    # Cassandra.cluster(..., password: "", ...)
   kind: call
   all:
     - has:
         stopBy: neighbor
         kind: constant
         regex: ^Cassandra$
     - has:
         stopBy: neighbor
         regex: ^.$
     - has:
         stopBy: neighbor
         kind: identifier
         regex: ^cluster$
     - has:
         stopBy: neighbor
         kind: argument_list
         has:
           stopBy: end
           kind: pair
           all:
            - has:
                stopBy: neighbor
                kind: hash_key_symbol
                regex: ^password$
            - has:
                stopBy: neighbor
                kind: identifier
                pattern: $SECRET
     - inside:
           stopBy: end
           kind: program
           has:
               stopBy: end
               kind: call
               pattern: require 'cassandra'
     - any:
        - follows:
               stopBy: end
               kind: assignment
               all:
                - has:
                      stopBy: neighbor
                      kind:  identifier
                      pattern: $SECRET
                - has:
                      stopBy: neighbor
                      kind: string
                      not:
                          has:
                              stopBy: neighbor
                              kind: string_content
        - inside:
              stopBy: end
              kind: assignment
              follows:
               stopBy: end
               kind: assignment
               all:
                - has:
                      stopBy: neighbor
                      kind:  identifier
                      pattern: $SECRET
                - has:
                      stopBy: neighbor
                      kind: string
                      not:
                          has:
                              stopBy: neighbor
                              kind: string_content                 
rule:
  kind: call
  any:
    - matches: Cassandra.cluster()
    - matches: Cassandra.cluster()_with_instance

id: ruby-faraday-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798] Use of Hard-coded Credentials.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  $X.request :authorization, :basic, $USER, "...":
    # $X.request :authorization, :basic, $USER, "..."
    kind: call
    pattern: $X.request :authorization, :basic, $USER, "$STRING"
    all:
      - not:
          pattern: $X.request :authorization, :basic, $USER, "$STRING", $$$
      - inside:
         stopBy: end
         kind: program
         has:
          stopBy: end
          kind: call
          pattern: require "faraday"
  $X.request :authorization, :basic, $USER, $PSD:
    # $X.request :authorization, :basic, $USER, $PSD
    kind: call
    pattern: $X.request :authorization, :basic, $USER, $PSD
    all:
    - not:
        pattern: $X.request :authorization, :basic, $USER, $PSD, $$$
    - follows:
       stopBy: end
       kind: assignment
       pattern: $PSD = '$PASS'
    - inside:
       stopBy: end
       kind: program
       has:
        stopBy: end
        kind: call
        pattern: require "faraday"
  $X.request :basic_auth, $USER, "...":
    # $X.request :basic_auth, $USER, "..."
    kind: call
    pattern: $X.request :basic_auth, $USER, "$STRING"
    all:
      - not:
          pattern: $X.request :basic_auth, $USER, "$STRING", $$$
      - inside:
         stopBy: end
         kind: program
         has:
          stopBy: end
          kind: call
          pattern: require "faraday"
  $X.request :basic_auth, $USER, $PSD:
    # $X.request :basic_auth, $USER, $PSD
    kind: call
    pattern: $X.request :basic_auth, $USER, $PSD
    all:
    - not:
        pattern: $X.request :basic_auth, $USER, $PSD, $$$
    - follows:
       stopBy: end
       kind: assignment
       pattern: $PSD = '$STRING'
    - inside:
       stopBy: end
       kind: program
       has:
        stopBy: end
        kind: call
        pattern: require "faraday"
  $X.request :token_auth, "...":
    # $X.request :token_auth, "...", ...
    kind: call
    pattern: $X.request :token_auth, "$STRING"
    inside:
      stopBy: end
      kind: program
      has:
        stopBy: end
        kind: call
        pattern: require "faraday"
  $X.request :token_auth, $PSD:
    # $X.request :token_auth, $PSD
    kind: call
    pattern: $X.request :token_auth, $PSD
    all:
    - follows:
       stopBy: end
       kind: assignment
       pattern: $PSD = '$STRING'
    - inside:
       stopBy: end
       kind: program
       has:
        stopBy: end
        kind: call
        pattern: require "faraday"
  $X.request :authorization, $BEARER, "...":
    # $X.request :authorization, $BEARER, "..."
    kind: call
    pattern: $X.request :authorization, $BEARER, "$STRING"
    all:
      - not:
          pattern: $X.request :authorization, $BEARER, "$STRING", $$$
      - inside:
         stopBy: end
         kind: program
         has:
          stopBy: end
          kind: call
          pattern: require "faraday"
  $X.request :authorization, $BEARER, PSD:
    # $X.request :authorization, $BEARER, "..."
    kind: call
    pattern: $X.request :authorization, $BEARER, $PSD
    all:
      - not:
          pattern: $X.request :authorization, $BEARER, $PSD, $$$
      - follows:
         stopBy: end
         kind: assignment
         pattern: $PSD = '$PASS'
      - inside:
         stopBy: end
         kind: program
         has:
          stopBy: end
          kind: call
          pattern: require "faraday"
rule:
  kind: call
  any:
    - matches: $X.request :authorization, :basic, $USER, "..."
    - matches: $X.request :authorization, :basic, $USER, $PSD
    - matches: $X.request :basic_auth, $USER, "..."
    - matches: $X.request :basic_auth, $USER, $PSD
    - matches: $X.request :token_auth, "..."
    - matches: $X.request :token_auth, $PSD
    - matches: $X.request :authorization, $BEARER, "..."
    - matches: $X.request :authorization, $BEARER, PSD

id: ruby-mysql2-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798]: Use of Hard-coded Credentials
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  Mysql2::Client.new(password:""):
    kind: call
    all:
      - has:
          stopBy: neighbor
          kind: scope_resolution
          regex: ^Mysql2::Client$
      - has:
          stopBy: neighbor
          regex: ^.$
      - has:
          stopBy: neighbor
          kind: identifier
          regex: ^new$
      - has:
          stopBy: neighbor
          kind: argument_list
          has:
            stopBy: end
            kind: pair
            all:
              - has:
                  stopBy: neighbor
                  kind: hash_key_symbol
                  regex: ^password$
              - has:
                  stopBy: neighbor
                  kind: string
                  has:
                    stopBy: neighbor
                    kind: string_content
      - inside:
          stopBy: end
          kind: program
          has:
            stopBy: end
            kind: call
            pattern: require 'mysql2'
  Mysql2::Client.new(password:"")with_instance:
    kind: assignment
    all:
      - has:
          stopBy: end
          kind: call
          all:
            - has:
                stopBy: neighbor
                kind: scope_resolution
                regex: ^Mysql2::Client$
            - has:
                stopBy: neighbor
                regex: ^.$
            - has:
                stopBy: neighbor
                kind: identifier
                regex: ^new$
            - has:
                stopBy: neighbor
                kind: argument_list
                has:
                  stopBy: end
                  kind: pair
                  all:
                    - has:
                        stopBy: neighbor
                        kind: hash_key_symbol
                        regex: ^password$
                    - has:
                        stopBy: neighbor
                        kind: identifier
                        nthChild: 2
                        pattern: $PASS
      - follows:
          stopBy: end
          kind: assignment
          pattern: $PASS = '$$$'
      - inside:
          stopBy: end
          kind: program
          has:
            stopBy: end
            kind: call
            pattern: require 'mysql2'
  match_call:
    kind: call
    all:
      - has:
          stopBy: end
          kind: scope_resolution
          field: receiver
          all:
            - has:
                stopBy: end
                kind: constant
                field: scope
            - has:
                kind: constant
                field: name
      - has:
          stopBy: end
          kind: identifier
          field: method
          regex: "^new$"
      - has:
          stopBy: end
          kind: argument_list
          all:
            - has:
                stopBy: end
                kind: pair
                all:
                  - has:
                      stopBy: end
                      kind: hash_key_symbol
                  - has:
                      stopBy: end
                      kind: string
                      has:
                        stopBy: end
                        kind: string_content
            - has:
                stopBy: end
                kind: pair
                all:
                  - has:
                      stopBy: end
                      kind: hash_key_symbol
                  - has:
                      stopBy: end
                      kind: string
                      has:
                        stopBy: end
                        kind: string_content
            - has:
                stopBy: end
                kind: pair
                all:
                  - has:
                      stopBy: end
                      kind: hash_key_symbol
                  - has:
                      stopBy: end
                      kind: identifier
                      field: value
                      pattern: $PASSWORD
    follows:
      stopBy: end
      kind: assignment
      all:
        - has:
            kind: identifier
            pattern: $PASSWORD
        - has:
            kind: string
    inside:
      stopBy: end
      kind: body_statement
rule:
  any:
    - kind: call
      matches: Mysql2::Client.new(password:"")
    - kind: assignment
      matches: Mysql2::Client.new(password:"")with_instance
    - kind: call
      matches: match_call

id: ruby-mongo-empty-password-ruby
language: ruby
severity: warning
message: >-
  The application creates a database connection with an empty password.
  This can lead to unauthorized access by either an internal or external
  malicious actor. To prevent this vulnerability, enforce authentication
  when connecting to a database by using environment variables to securely
  provide credentials or retrieving them from a secure vault or HSM
  (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
       https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  Mongo::Client.new(password:""):
    kind: assignment
    has:
      stopBy: neighbor
      kind: call
      all:
        - has:
            stopBy: neighbor
            kind: scope_resolution
            regex: ^Mongo::Client$
        - has:
            stopBy: neighbor
            regex: ^.$
        - has:
            stopBy: neighbor
            kind: identifier
            regex: ^new$
        - has:
            stopBy: neighbor
            kind: argument_list
            has:
              stopBy: end
              kind: pair
              all:
                - has:
                    stopBy: neighbor
                    kind: hash_key_symbol
                    regex: ^password$
                - has:
                    stopBy: neighbor
                    kind: string
                    not:
                      has:
                        stopBy: neighbor
                        kind: string_content
  Mongo::Client.new(password:"")with_instance:
    kind: assignment
    all:
      - has:
          stopBy: end
          kind: call
          all:
            - has:
                stopBy: neighbor
                kind: scope_resolution
                regex: ^Mongo::Client$
            - has:
                stopBy: neighbor
                regex: ^.$
            - has:
                stopBy: neighbor
                kind: identifier
                regex: ^new$
            - has:
                stopBy: neighbor
                kind: argument_list
                has:
                  stopBy: end
                  kind: pair
                  all:
                    - has:
                        stopBy: neighbor
                        kind: hash_key_symbol
                        regex: ^password$
                    - has:
                        stopBy: neighbor
                        kind: identifier
                        nthChild: 2
                        pattern: $PASS
      - follows:
          stopBy: end
          kind: assignment
          pattern: $PASS = ''
  $CLIENT.with(password:""):
    kind: assignment
    has:
      stopBy: neighbor
      kind: call
      all:
        - has:
            stopBy: neighbor
            kind: identifier
        - has:
            stopBy: neighbor
            regex: ^.$
        - has:
            stopBy: neighbor
            kind: identifier
            regex: ^with$
        - has:
            stopBy: neighbor
            kind: argument_list
            has:
              stopBy: end
              kind: pair
              all:
                - has:
                    stopBy: neighbor
                    kind: hash_key_symbol
                    regex: ^password$
                - has:
                    stopBy: neighbor
                    kind: string
                    not:
                      has:
                        stopBy: neighbor
                        kind: string_content
  $CLIENT.with(password:"")with_instance:
    kind: assignment
    all:
      - has:
          stopBy: neighbor
          kind: call
          all:
            - has:
                stopBy: neighbor
                kind: identifier
            - has:
                stopBy: neighbor
                regex: ^.$
            - has:
                stopBy: neighbor
                kind: identifier
                regex: ^with$
            - has:
                stopBy: neighbor
                kind: argument_list
                has:
                  stopBy: end
                  kind: pair
                  all:
                    - has:
                        stopBy: neighbor
                        kind: hash_key_symbol
                        regex: ^password$
                    - has:
                        stopBy: neighbor
                        kind: identifier
                        pattern: $PSWD
      - follows:
          stopBy: end
          kind: assignment
          pattern: $PSWD = ''
rule:
  kind: assignment
  any:
    - matches: Mongo::Client.new(password:"")
    - matches: Mongo::Client.new(password:"")with_instance
    - matches: $CLIENT.with(password:"")
    - matches: $CLIENT.with(password:"")with_instance

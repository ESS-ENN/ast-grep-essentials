id: ruby-cassandra-hardcoded-secret-ruby
language: ruby
severity: warning
message: >-
  A secret is hard-coded in the application. Secrets stored in source
  code, such as credentials, identifiers, and other types of sensitive data,
  can be leaked and used by internal or external malicious actors. Use
  environment variables to securely provide credentials and other secrets or
  retrieve them from a secure vault or Hardware Security Module (HSM).
note: >-
  [CWE-798] Use of Hard-coded Credentials.
  [REFERENCES]
      - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  Cassandra.cluster():
    # Cassandra.cluster(..., password: "", ...)
   kind: call
   all:
     - has:
         stopBy: neighbor
         kind: constant
         regex: ^Cassandra$
     - has:
         stopBy: neighbor
         regex: ^.$
     - has:
         stopBy: neighbor
         kind: identifier
         regex: ^cluster$
     - has:
         stopBy: neighbor
         kind: argument_list
         has:
           stopBy: end
           kind: pair
           all:
            - has:
                stopBy: neighbor
                kind: hash_key_symbol
                regex: ^password$
            - has:
                stopBy: neighbor
                kind: string
                has:
                  stopBy: neighbor
                  kind: string_content
     - inside:
           stopBy: end
           kind: program
           has:
               stopBy: end
               kind: call
               pattern: require 'cassandra'
  Cassandra.cluster()_with_instance:
    # Cassandra.cluster(..., password: "", ...)
   kind: call
   all:
     - has:
         stopBy: neighbor
         kind: constant
         regex: ^Cassandra$
     - has:
         stopBy: neighbor
         regex: ^.$
     - has:
         stopBy: neighbor
         kind: identifier
         regex: ^cluster$
     - has:
         stopBy: neighbor
         kind: argument_list
         has:
           stopBy: end
           kind: pair
           all:
            - has:
                stopBy: neighbor
                kind: hash_key_symbol
                regex: ^password$
            - has:
                stopBy: neighbor
                kind: identifier
                pattern: $SECRET
     - inside:
           stopBy: end
           kind: program
           has:
               stopBy: end
               kind: call
               pattern: require 'cassandra'
     - any:
        - follows:
               stopBy: end
               kind: assignment
               all:
                - has:
                      stopBy: neighbor
                      kind:  identifier
                      pattern: $SECRET
                - has:
                      stopBy: neighbor
                      kind: string
                      has:
                              stopBy: neighbor
                              kind: string_content
        - inside:
              stopBy: end
              kind: assignment
              follows:
               stopBy: end
               kind: assignment
               all:
                - has:
                      stopBy: neighbor
                      kind:  identifier
                      pattern: $SECRET
                - has:
                      stopBy: neighbor
                      kind: string
                      has:
                              stopBy: neighbor
                              kind: string_content                 
rule:
  kind: call
  any:
    - matches: Cassandra.cluster()
    - matches: Cassandra.cluster()_with_instance

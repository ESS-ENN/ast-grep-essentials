id: python-mysqlclient-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password. This can lead to unauthorized access by either an internal or external malicious actor. To prevent this vulnerability, enforce authentication when connecting to a database by using environment variables to securely provide credentials or retrieving them from a secure vault or HSM (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [A07:2021]: Identification and Authentication Failures
  [REFERENCES]
    - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

rule:
  kind: call
  any:
    - all:
        - has:
            nthChild: 1
            kind: attribute
            pattern: MySQLdb.$CONNECT
        - has:
            kind: argument_list
            nthChild: 2
            has:
              any:
                - kind: keyword_argument
                  all:
                    - has:
                        kind: identifier
                        field: name
                        nthChild: 1
                        regex: ^passwd$
                    - has:
                        kind: string
                        field: value
                        nthChild: 2
                        all:
                          - has:
                              kind: string_start
                              nthChild: 1
                          - has:
                              kind: string_end
                              nthChild: 2
                - kind: string
                  nthChild: 3
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2
    - all:
        - has:
            nthChild: 1
            kind: attribute
            pattern: $MYSQL_ALIAS.$CONNECT
            inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_statement
                has:
                  kind: aliased_import
                  all:
                    - has:
                        kind: dotted_name
                        regex: MySQLdb
                    - has:
                        kind: identifier
                        pattern: $MYSQL_ALIAS
        - has:
            kind: argument_list
            nthChild: 2
            has:
              any:
                - kind: keyword_argument
                  all:
                    - has:
                        kind: identifier
                        field: name
                        nthChild: 1
                        regex: ^passwd$
                    - has:
                        kind: string
                        field: value
                        nthChild: 2
                        all:
                          - has:
                              kind: string_start
                              nthChild: 1
                          - has:
                              kind: string_end
                              nthChild: 2
                - kind: string
                  nthChild: 3
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2
    - all:
        - has:
            nthChild: 1
            kind: attribute
            any:
              - pattern: MySQLdb._mysql.$CONNECT
              - pattern: _mysql.$CONNECT
                inside:
                  stopBy: end
                  follows:
                    stopBy: end
                    kind: import_from_statement
                    all:
                      - has:
                          kind: dotted_name
                          field: module_name
                          regex: ^MySQLdb$
                      - has:
                          kind: dotted_name
                          field: name
                          regex: ^_mysql$
        - has:
            kind: argument_list
            nthChild: 2
            has:
              any:
                - kind: keyword_argument
                  all:
                    - has:
                        kind: identifier
                        field: name
                        nthChild: 1
                        regex: ^passwd$
                    - has:
                        kind: string
                        field: value
                        nthChild: 2
                        all:
                          - has:
                              kind: string_start
                              nthChild: 1
                          - has:
                              kind: string_end
                              nthChild: 2
                - kind: string
                  nthChild: 3
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2
    - all:
        - has:
            nthChild: 1
            kind: attribute
            pattern: $MYSQL_FROM_ALIAS.$CONNECT
            inside:
              stopBy: end
              follows:
                stopBy: end
                kind: import_from_statement
                all:
                  - has:
                      kind: dotted_name
                      field: module_name
                      regex: ^MySQLdb$
                      nthChild: 1
                  - has:
                      kind: aliased_import
                      all:
                        - has:
                            kind: dotted_name
                            field: name
                            regex: ^_mysql$
                        - has:
                            kind: identifier
                            field: alias
                            pattern: $MYSQL_FROM_ALIAS
        - has:
            kind: argument_list
            nthChild: 2
            has:
              any:
                - kind: keyword_argument
                  all:
                    - has:
                        kind: identifier
                        field: name
                        nthChild: 1
                        regex: ^passwd$
                    - has:
                        kind: string
                        field: value
                        nthChild: 2
                        all:
                          - has:
                              kind: string_start
                              nthChild: 1
                          - has:
                              kind: string_end
                              nthChild: 2
                - kind: string
                  nthChild: 3
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2

id: python-neo4j-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password. This can lead to unauthorized access by either an internal or external malicious actor. To prevent this vulnerability, enforce authentication when connecting to a database by using environment variables to securely provide credentials or retrieving them from a secure vault or HSM (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [A07:2021]: Identification and Authentication Failures
  [REFERENCES]
    - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

rule:
  kind: call
  any:
    - all:
        - has:
            nthChild: 1
            kind: identifier
            value: function
            any:
              - regex: ^(kerberos_auth|bearer_auth)$
              - pattern: $ALIAS1
                inside:
                  stopBy: end
                  follows:
                    stopBy: end
                    kind: import_from_statement
                    all:
                      - has:
                          kind: dotted_name
                          field: module_name
                          regex: ^neo4j$
                      - has:
                          kind: aliased_import
                          all:
                            - has:
                                kind: dotted_name
                                field: name
                                regex: ^(kerberos_auth|bearer_auth)$
                            - has:
                                kind: identifier
                                field: alias
                                pattern: $ALIAS1
        - has:
            kind: argument_list
            nthChild: 2
            has:
              kind: string
              nthChild: 1
              all:
                - has:
                    kind: string_start
                    nthChild: 1
                - has:
                    kind: string_end
                    nthChild: 2
    - all:
        - has:
            nthChild: 1
            kind: identifier
            value: function
            any:
              - regex: ^(custom_auth|basic_auth)$
              - pattern: $ALIAS2
                inside:
                  stopBy: end
                  follows:
                    stopBy: end
                    kind: import_from_statement
                    all:
                      - has:
                          kind: dotted_name
                          field: module_name
                          regex: ^neo4j$
                      - has:
                          kind: aliased_import
                          all:
                            - has:
                                kind: dotted_name
                                field: name
                                regex: ^(custom_auth|basic_auth)$
                            - has:
                                kind: identifier
                                field: alias
                                pattern: $ALIAS2
        - has:
            kind: argument_list
            nthChild: 2
            has:
              kind: string
              nthChild: 2
              all:
                - has:
                    kind: string_start
                    nthChild: 1
                - has:
                    kind: string_end
                    nthChild: 2

id: python-pymysql-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password.
  This can lead to unauthorized access by either an internal or external
  malicious actor. To prevent this vulnerability, enforce authentication
  when connecting to a database by using environment variables to securely
  provide credentials or retrieving them from a secure vault or HSM
  (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [OWASP A07:2021]: Identification and Authentication Failures
  [REFERENCES]
        https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
utils:
  match_call:
    kind: call
    all:
      - has:
          stopBy: end
          kind: attribute
          field: function
          all:
            - has:
                stopBy: end
                kind: identifier
                field: object
                regex: "^pymysql$"
            - has:
                stopBy: end
                kind: identifier
                field: attribute
                regex: "^connect$"
      - has:
          stopBy: end
          kind: argument_list
          field: arguments
          all:
            - has:
                stopBy: end
                kind: keyword_argument
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      field: name
                      regex: "^password$"
                  - has:
                      stopBy: end
                      kind: string
                      field: value
                      all:
                        - has:
                            stopBy: end
                            kind: string_start
                            not:
                              precedes:
                                stopBy: end
                                kind: string_content
                        - has:
                            stopBy: end
                            kind: string_end
    inside:
      stopBy: end
      kind: expression_statement
  match_call_string:
    kind: call
    all:
      - has:
          stopBy: end
          kind: attribute
          field: function
          all:
            - has:
                stopBy: end
                kind: identifier
                field: object
                regex: "^pymysql$"
            - has:
                stopBy: end
                kind: identifier
                field: attribute
                regex: "^connect$"
      - has:
          stopBy: end
          kind: argument_list
          field: arguments
          all:
            - has:
                stopBy: end
                kind: keyword_argument
                all:
                  - has:
                      stopBy: end
                      kind: identifier
                      field: name
                      regex: "^password$"
                  - has:
                      stopBy: end
                      kind: identifier
                      field: value
                      pattern: $R
    inside:
      stopBy: end
      kind: expression_statement
      follows:
        stopBy: end
        kind: expression_statement
        has:
          stopBy: end
          kind: assignment
          all:
            - has:
                stopBy: end
                kind: identifier
                pattern: $R
            - has:
                stopBy: end
                kind: string
                all:
                  - has:
                      stopBy: end
                      kind: string_start
                      not:
                        precedes:
                          stopBy: end
                          kind: string_content
                  - has:
                      stopBy: end
                      kind: string_end

rule:
  any:
    - matches: match_call
    - matches: match_call_string

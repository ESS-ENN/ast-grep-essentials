id: python-mysql-empty-password-python
language: python
severity: warning
message: >-
  The application creates a database connection with an empty password. This can lead to unauthorized access by either an internal or external malicious actor. To prevent this vulnerability, enforce authentication when connecting to a database by using environment variables to securely provide credentials or retrieving them from a secure vault or HSM (Hardware Security Module).
note: >-
  [CWE-287]: Improper Authentication
  [A07:2021]: Identification and Authentication Failures
  [REFERENCES]
    - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html

rule:
  any:
    - kind: call
      has:
        kind: attribute
        field: function
        regex: ^mysql.connector.connect$
        precedes:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: string
                  nthChild: 2
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2
      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_statement
          has:
            kind: dotted_name
            nthChild: 1
            regex: ^mysql.connector$
    - kind: call
      has:
        kind: attribute
        field: function
        pattern: $CONNECTOR_ALIAS.connect
        precedes:
          kind: argument_list
          has:
            kind: keyword_argument
            all:
              - has:
                  kind: identifier
                  nthChild: 1
                  regex: ^(password|passwd)$
              - has:
                  kind: string
                  nthChild: 2
                  all:
                    - has:
                        kind: string_start
                        nthChild: 1
                    - has:
                        kind: string_end
                        nthChild: 2
      inside:
        stopBy: end
        follows:
          stopBy: end
          kind: import_statement
          has:
            kind: aliased_import
            nthChild: 1
            all:
              - has:
                  kind: dotted_name
                  nthChild: 1
                  regex: ^mysql.connector$
              - has:
                  kind: identifier
                  field: alias
                  nthChild: 2
                  pattern: $CONNECTOR_ALIAS

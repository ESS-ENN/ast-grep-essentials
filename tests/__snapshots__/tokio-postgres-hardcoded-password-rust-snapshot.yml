id: tokio-postgres-hardcoded-password-rust
snapshots:
  ? |
    fn test1() {
    let mut config = postgres::Config::new();
    as = "hardcoded-password";
    config
     .host(std::env::var("HOST").expect("set HOST"))
     .user(std::env::var("USER").expect("set USER"))
     .password(as)
     .port(std::env::var("PORT").expect("set PORT"));
    let client = config.connect(NoTls).unwrap();
    Ok(())
    }
  : labels:
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
      style: primary
      start: 82
      end: 201
    - source: config
      style: secondary
      start: 82
      end: 88
    - source: |-
        config
         .host
      style: secondary
      start: 82
      end: 95
    - source: (std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 95
      end: 137
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 82
      end: 137
    - source: user
      style: secondary
      start: 140
      end: 144
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user
      style: secondary
      start: 82
      end: 144
    - source: (std::env::var("USER").expect("set USER"))
      style: secondary
      start: 144
      end: 186
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
      style: secondary
      start: 82
      end: 186
    - source: password
      style: secondary
      start: 189
      end: 197
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password
      style: secondary
      start: 82
      end: 197
    - source: as
      style: secondary
      start: 198
      end: 200
    - source: (as)
      style: secondary
      start: 197
      end: 201
    - source: config
      style: secondary
      start: 21
      end: 27
    - source: postgres::Config::new()
      style: secondary
      start: 30
      end: 53
    - source: let mut config = postgres::Config::new();
      style: secondary
      start: 13
      end: 54
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
         .port(std::env::var("PORT").expect("set PORT"));
      style: secondary
      start: 82
      end: 251
    - source: as
      style: secondary
      start: 55
      end: 57
    - source: hardcoded-password
      style: secondary
      start: 61
      end: 79
    - source: '"hardcoded-password"'
      style: secondary
      start: 60
      end: 80
    - source: as = "hardcoded-password"
      style: secondary
      start: 55
      end: 80
    - source: as = "hardcoded-password";
      style: secondary
      start: 55
      end: 81
    - source: |-
        {
        let mut config = postgres::Config::new();
        as = "hardcoded-password";
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password(as)
         .port(std::env::var("PORT").expect("set PORT"));
        let client = config.connect(NoTls).unwrap();
        Ok(())
        }
      style: secondary
      start: 11
      end: 305
  ? |
    fn test1() {
    let mut config = postgres::Config::new();
    config
     .host(std::env::var("HOST").expect("set HOST"))
     .user(std::env::var("USER").expect("set USER"))
     .password("hardcoded-password")
     .port(std::env::var("PORT").expect("set PORT"));
    let client = config.connect(NoTls).unwrap();
    Ok(())
    }
  : labels:
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password("hardcoded-password")
      style: primary
      start: 55
      end: 192
    - source: config
      style: secondary
      start: 55
      end: 61
    - source: |-
        config
         .host
      style: secondary
      start: 55
      end: 68
    - source: (std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 68
      end: 110
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
      style: secondary
      start: 55
      end: 110
    - source: user
      style: secondary
      start: 113
      end: 117
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user
      style: secondary
      start: 55
      end: 117
    - source: (std::env::var("USER").expect("set USER"))
      style: secondary
      start: 117
      end: 159
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
      style: secondary
      start: 55
      end: 159
    - source: password
      style: secondary
      start: 162
      end: 170
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password
      style: secondary
      start: 55
      end: 170
    - source: hardcoded-password
      style: secondary
      start: 172
      end: 190
    - source: '"hardcoded-password"'
      style: secondary
      start: 171
      end: 191
    - source: ("hardcoded-password")
      style: secondary
      start: 170
      end: 192
    - source: config
      style: secondary
      start: 21
      end: 27
    - source: postgres::Config::new()
      style: secondary
      start: 30
      end: 53
    - source: let mut config = postgres::Config::new();
      style: secondary
      start: 13
      end: 54
    - source: |-
        config
         .host(std::env::var("HOST").expect("set HOST"))
         .user(std::env::var("USER").expect("set USER"))
         .password("hardcoded-password")
         .port(std::env::var("PORT").expect("set PORT"));
      style: secondary
      start: 55
      end: 242
  ? |
    fn test2() {
    asa = "cvsdgsdvvbdfbd";
    let (client, connection) = postgres::Config::new()
    .host(shard_host_name.as_str())
    .user("postgres")
    .password(asa)
    .dbname("moray")
    .keepalives_idle(std::time::Duration::from_secs(30))
    .connect(NoTls);
    Ok(())
    }
  : labels:
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password(asa)
      style: primary
      start: 64
      end: 152
    - source: postgres::Config::new()
      style: secondary
      start: 64
      end: 87
    - source: |-
        postgres::Config::new()
        .host
      style: secondary
      start: 64
      end: 93
    - source: (shard_host_name.as_str())
      style: secondary
      start: 93
      end: 119
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
      style: secondary
      start: 64
      end: 119
    - source: user
      style: secondary
      start: 121
      end: 125
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user
      style: secondary
      start: 64
      end: 125
    - source: ("postgres")
      style: secondary
      start: 125
      end: 137
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
      style: secondary
      start: 64
      end: 137
    - source: password
      style: secondary
      start: 139
      end: 147
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password
      style: secondary
      start: 64
      end: 147
    - source: asa
      style: secondary
      start: 148
      end: 151
    - source: (asa)
      style: secondary
      start: 147
      end: 152
    - source: asa
      style: secondary
      start: 13
      end: 16
    - source: cvsdgsdvvbdfbd
      style: secondary
      start: 20
      end: 34
    - source: '"cvsdgsdvvbdfbd"'
      style: secondary
      start: 19
      end: 35
    - source: asa = "cvsdgsdvvbdfbd"
      style: secondary
      start: 13
      end: 35
    - source: asa = "cvsdgsdvvbdfbd";
      style: secondary
      start: 13
      end: 36
    - source: |-
        {
        asa = "cvsdgsdvvbdfbd";
        let (client, connection) = postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password(asa)
        .dbname("moray")
        .keepalives_idle(std::time::Duration::from_secs(30))
        .connect(NoTls);
        Ok(())
        }
      style: secondary
      start: 11
      end: 248
  ? |-
    fn test2() {
    let (client, connection) = postgres::Config::new()
    .host(shard_host_name.as_str())
    .user("postgres")
    .password("hardcoded-password")
    .dbname("moray")
    .keepalives_idle(std::time::Duration::from_secs(30))
    .connect(NoTls);
    Ok(())
    }
  : labels:
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password("hardcoded-password")
      style: primary
      start: 40
      end: 145
    - source: postgres::Config::new()
      style: secondary
      start: 40
      end: 63
    - source: |-
        postgres::Config::new()
        .host
      style: secondary
      start: 40
      end: 69
    - source: (shard_host_name.as_str())
      style: secondary
      start: 69
      end: 95
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
      style: secondary
      start: 40
      end: 95
    - source: user
      style: secondary
      start: 97
      end: 101
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user
      style: secondary
      start: 40
      end: 101
    - source: ("postgres")
      style: secondary
      start: 101
      end: 113
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
      style: secondary
      start: 40
      end: 113
    - source: password
      style: secondary
      start: 115
      end: 123
    - source: |-
        postgres::Config::new()
        .host(shard_host_name.as_str())
        .user("postgres")
        .password
      style: secondary
      start: 40
      end: 123
    - source: hardcoded-password
      style: secondary
      start: 125
      end: 143
    - source: '"hardcoded-password"'
      style: secondary
      start: 124
      end: 144
    - source: ("hardcoded-password")
      style: secondary
      start: 123
      end: 145
